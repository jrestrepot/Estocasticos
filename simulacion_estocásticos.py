# -*- coding: utf-8 -*-
"""Simulacion estocásticos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HiXy46TTVUg4063jz0chi9Y8G2gK58Dp

## Simulación paseo aletorio
"""

import numpy as np
import pandas as pd
import random as rand

def paseoAleatorio(n):
  #Definimos matriz de transición
  matrizT = np.zeros((n,n))
  for i in range(matrizT.shape[0]):
    for j in range(matrizT.shape[1]):
      if i==j-1:
        matrizT[i,j]=1/2
      if i==j+1:
        matrizT[i,j]=1/2
  matrizT[0,n-1]=1/2 #Para que se cumpla que las filas sumen 1
  matrizT[n-1,0]=1/2 #Para que se cumpla que las filas sumen 1

  #Definimos cadena de estados visitados
  visitados= []
  for i in range(n): 
    visitados.append(False)

  eInicial= rand.randint(0,n-1) #Estado inicial
  estado_i= eInicial
  estados = np.zeros(n)

  visitados[eInicial]= True #Porque ya visitó el estado inicial

  for i in range(n):
    estados[i]= i #Definimos columna de estados
  
  cont=0
  while not all(visitados):
    estado_i= int(np.random.choice(estados,p=matrizT[estado_i]))
    visitados[estado_i] = True
    cont+=1

  return cont

#Simulamos 1000 veces con tamaños de 3 a 15
column = []
for i in range(3,16):
  sum = 0
  for j in range(1000):
    sum = sum + paseoAleatorio(i)
  column.append([i,sum/1000,i*(i-1)/2])
column = pd.DataFrame(column).set_axis(['n','Tcub experimental', 'Tcub teórico'],axis=1)
column